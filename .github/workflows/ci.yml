name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.gitversion.outputs.nuGetVersionV2 }}
      branchName: ${{ steps.gitversion.outputs.branchName }}
      commitsSinceVersionSource: ${{ steps.gitversion.outputs.commitsSinceVersionSource }}

    defaults:
      run:
        shell: bash
        working-directory: src/cert-manager-acme-httphook

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      -
        name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'
      -
        name: Create AssemblyVersionInfo
        run: |
          echo '
          using System.Reflection;

          [assembly: AssemblyFileVersion("0.0.0.0")]
          [assembly: AssemblyVersion("0.0.0.0")]
          [assembly: AssemblyInformationalVersion("0.0.0.0")]
          ' > ../AssemblyVersionInfo.cs
      -
        name: Generate assembly info
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          updateAssemblyInfo: true
          updateAssemblyInfoFilename: src/AssemblyVersionInfo.cs
      -
        name: Restore dependencies
        run: dotnet restore
      -
        name: Build
        run: dotnet build -c Release --no-restore
  #   -
  #     name: Test
  #     run: dotnet test --no-build --verbosity normal

  docker:

    runs-on: ubuntu-latest
    
    needs: build
    
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
      -
        name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.9
        with:
          versionSpec: '5.x'
      -
        name: Create AssemblyVersionInfo
        run: |
          echo '
          using System.Reflection;

          [assembly: AssemblyFileVersion("0.0.0.0")]
          [assembly: AssemblyVersion("0.0.0.0")]
          [assembly: AssemblyInformationalVersion("0.0.0.0")]
          ' > ../AssemblyVersionInfo.cs
      -
        name: Generate assembly info
        uses: gittools/actions/gitversion/execute@v0.9.9
        with:
          updateAssemblyInfo: true
          updateAssemblyInfoFilename: src/AssemblyVersionInfo.cs
      -
        name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
